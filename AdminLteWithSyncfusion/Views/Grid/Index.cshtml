@{
    ViewBag.Title = "Index";
    ViewBag.Description = "Grid Demo";
}

<div class="row">

    <div class="col-xs-12 col-md-12">
        <div class="box box-info">
            <div class="box-header">
                <h3 class="box-title">Grid Demo</h3>
            </div>
            <div class="box-body">

                @{
                    List<object> toolbarItems = new List<object>();
                    toolbarItems.Add("Add");
                    toolbarItems.Add("Edit");
                    toolbarItems.Add("Delete");
                    toolbarItems.Add("Update");
                    toolbarItems.Add("Cancel");
                    toolbarItems.Add(new { text = "Refresh", tooltipText = "Refresh", id = "Refresh", prefixIcon = "e-refresh" });
                    toolbarItems.Add("Search");
                }


                @(
                    Html.EJS().Grid("Grid")
                    .DataSource(dataManager => { dataManager.Url("/Grid/UrlDatasource").InsertUrl("/Grid/Insert").UpdateUrl("/Grid/Update").RemoveUrl("/Grid/Delete").Adaptor("UrlAdaptor"); })
                    .EditSettings(edit => { edit.AllowAdding(true).AllowEditing(true).AllowDeleting(true).Mode(Syncfusion.EJ2.Grids.EditMode.Dialog).ShowDeleteConfirmDialog(true); })
                    .AllowSorting()
                    .AllowReordering()
                    .ShowColumnChooser(true)
                    .ShowColumnMenu(true)
                    .AllowFiltering(true)
                    .FilterSettings(filter => { filter.Type(Syncfusion.EJ2.Grids.FilterType.Excel); })
                    .SearchSettings(search => { search.Fields(new string[] { "Id", "Name", "Address", "Email", "IPAddress" }).IgnoreCase(true); })
                    .AllowGrouping(true)
                    .AllowPaging()
                    .PageSettings(page => page.PageSize(5).PageSizes(true)
                    .PageCount(5))
                    .ToolbarClick("toolbarClick")
                    .Toolbar(toolbarItems)
                    .Columns(col =>
                    {
                        col.Field("Id").HeaderText("ID").Width("50").IsIdentity(true).IsPrimaryKey(true).DefaultValue(0).Add();
                        col.Field("Name").HeaderText("NAME").Width("250").Add();
                        col.Field("Address").HeaderText("ADDRESS").Width("300").Add();
                        col.Field("CountryId").HeaderText("COUNTRY").ForeignKeyField("Id").ForeignKeyValue("Name").DataSource(ViewBag.Countries).Width("200").Add();
                        col.Field("Email").HeaderText("EMAIL").Width("200").Add();
                        col.Field("BirthDate").HeaderText("BIRTHDATE").Add();
                        col.Field("IPAddress").HeaderText("IP ADDRESS").Add();
                    })
                    .ActionComplete("actionComplete")
                    .Render()
                )

                <script>
                    function toolbarClick(args) {
                        if (args.item.id === 'Refresh') {
                            var grid = document.getElementById("Grid").ej2_instances[0];
                            grid.refresh();
                        }
                    }
                </script>
                <style>
                    .e-refresh::before {
                        content: '\e99d';
                    }
                </style>

                <script>
                    function actionComplete(args) {
                        if (args.requestType === 'beginEdit') {

                        }
                        if (args.requestType === 'add') {
 
                        }
                    }
                </script>

            </div>
        </div>
    </div>

</div>